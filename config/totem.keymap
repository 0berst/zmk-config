//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define Base        0
#define Layer1      1
#define Layer2      2
#define Layer3      3
#define Layer4      4
#define Board       5

// "layer-tap" behavior
// enables a layer when a key is held, and outputs a keypress when the key is tapped
// &lt {
//     tapping-term-ms = <240>;
//     flavor = "balanced";
//     quick-tap-ms = <150>;
// };

/ {

behaviors {
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        bindings =
        <&kp>,
        <&kp>;
    };
};

keymap {
    compatible = "zmk,keymap";

    //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
    //             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Z     ┃     U     ┃     I     ┃     O     ┃     P     ┃
    //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
    //             ┃   LGUI A  ┃ LALT S    ┃ LCTRL D   ┃ LSHIFT F  ┃     G     ┃   ┃     H     ┃ RSHFT J   ┃ RCTRL K   ┃ RALT L    ┃     O     ┃
    // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
    // ┃           ┃     Y     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     -     ┃           ┃
    // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
    //                                     ┃ L1 ESCAPE ┃ L2 TAB    ┃ L3 SPC    ┃   ┃ L4 ENTER  ┃ L5 BSPC   ┃ L0 DEL    ┃
    //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

    Base {
        display-name = "Base";
        bindings = <
                &kp Q       &kp W       &kp E         &kp R         &kp T       &kp Z            &kp U        &kp I         &kp O       &kp P
                &hm LGUI A  &hm LALT S  &hm LCTRL D   &hm LSHIFT F  &kp G       &kp H            &hm RSHFT J  &hm RCTRL K   &hm RALT L  &kp O
        &trans  &kp Y       &kp X       &kp C         &kp V         &kp B       &kp N            &kp M        &kp COMMA     &kp PERIOD  &kp MINUS  &kp A
                                  &lt 1 ESCAPE  &lt 2 TAB     &lt 3 SPACE       &lt 4 ENTER  &lt 5 BACKSPACE  &lt 0 DELETE
        >;
        };

    Layer1 {
        display-name = "Layer 1";
        status = "reserved";
    };

    Layer2 {
        display-name = "Layer 2";
        status = "reserved";
    };

    Layer3 {
        display-name = "Layer 3";
        status = "reserved";
    };

    Layer4 {
        display-name = "Layer 4";
        status = "reserved";
    };

    Board {
        display-name = "Board";
        bindings = <
                &bt BT_CLR         &bootloader  &trans     &trans      &bt BT_SEL 0         &trans      &trans     &trans  &bootloader    &trans
                &kp LGUI           &kp LALT     &kp LCTRL  &kp LSHIFT  &bt BT_SEL 1         &trans      &kp RSHIFT  &kp RCTRL     &kp RALT  &kp RGUI
        &trans  &studio_unlock     &trans       &trans     &trans      &bt BT_SEL 2         &trans      &trans     &trans       &trans    &trans  &trans
                                                &trans     &trans      &trans               &trans      &trans     &trans
        >;
    };

  };
};